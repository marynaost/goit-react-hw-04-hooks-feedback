{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","button","type","value","onClick","Statistics","good","neutral","bad","total","positivePercent","item","list","Notification","message","Section","title","children","section","App","state","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","floor","this","totalFeedback","availableFeedback","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,4NCuB1CC,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SAELC,MAAOL,EACPM,QAAS,kBAAMR,EAAgBE,IALjC,SAOGA,GAJIA,S,gBCaAO,MApBf,YAAqE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAC/C,OACE,qBAAIX,UAAWC,IAAEW,KAAjB,UACE,qBAAIZ,UAAWC,IAAEY,KAAjB,mBAA8BN,KAC9B,qBAAIP,UAAWC,IAAEY,KAAjB,sBAAiCL,KACjC,qBAAIR,UAAWC,IAAEY,KAAjB,kBAA6BJ,KAC7B,qBAAIT,UAAWC,IAAEY,KAAjB,oBAA+BH,KAC/B,qBAAIV,UAAWC,IAAEY,KAAjB,gCAA2CF,EAA3C,WCISG,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,4BAAIA,O,iBCaKC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASlB,UAAWC,IAAEkB,QAAtB,UACGF,GAAS,6BAAKA,IACdC,MCADE,E,4MACJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,gBAAkB,SAAAE,GAChB,EAAKuB,UAAS,SAAAC,GACZ,OAAO,eAAGxB,EAASwB,EAAUxB,GAAU,O,EAI3CyB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKxB,GAAN,OAAgBwB,EAAMxB,IAAO,I,EAGvEyB,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKV,MAAMd,KAAO,EAAKiB,qBAAwB,M,4CAE7D,WACE,MAA+BQ,KAAKX,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBwB,EAAgBD,KAAKR,qBACrBU,EAAoBD,EAAgB,EACpCtB,EAAkBqB,KAAKH,kCAC7B,OACE,sBAAK7B,UAAU,YAAf,UACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAAS6B,OAAOU,KAAKH,KAAKX,OAC1BxB,gBAAiBmC,KAAKnC,oBAG1B,cAAC,EAAD,CAASoB,MAAM,aAAf,SACGiB,EACC,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,EACPtB,gBAAiBA,IAGnB,cAAC,EAAD,CAAcI,QAAQ,kC,GA3ChBqB,aAmDHhB,ICpDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BhD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.8593f6df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2leDU\",\"list\":\"Statistics_list__3Ciz5\"};","import s from './FeedbackOptions.module.scss';\r\nimport PropTypes from 'prop-types';\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          key={option}\r\n          value={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.scss';\r\nfunction Statistics({ good, neutral, bad, total, positivePercent }) {\r\n  return (\r\n    <ul className={s.item}>\r\n      <li className={s.list}>Good: {good}</li>\r\n      <li className={s.list}>Neutral: {neutral}</li>\r\n      <li className={s.list}>Bad: {bad}</li>\r\n      <li className={s.list}>Total: {total}</li>\r\n      <li className={s.list}>Positive feedback: {positivePercent}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nfunction Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\nimport Section from 'components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () =>\n    Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const availableFeedback = totalFeedback > 0;\n    const positivePercent = this.countPositiveFeedbackPercentage();\n    return (\n      <div className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {availableFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercent={positivePercent}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__FLMjI\"};"],"sourceRoot":""}