{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","button","type","value","onClick","Statistics","good","neutral","bad","total","positivePercent","item","list","Notification","message","Section","title","children","section","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevGood","prevNeutral","prevBad","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,kC,wLCuBZC,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SAELC,MAAOL,EACPM,QAAS,kBAAMR,EAAgBE,IALjC,SAOGA,GAJIA,S,gBCaAO,MApBf,YAAqE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAC/C,OACE,qBAAIX,UAAWC,IAAEW,KAAjB,UACE,qBAAIZ,UAAWC,IAAEY,KAAjB,mBAA8BN,KAC9B,qBAAIP,UAAWC,IAAEY,KAAjB,sBAAiCL,KACjC,qBAAIR,UAAWC,IAAEY,KAAjB,kBAA6BJ,KAC7B,qBAAIT,UAAWC,IAAEY,KAAjB,oBAA+BH,KAC/B,qBAAIV,UAAWC,IAAEY,KAAjB,gCAA2CF,EAA3C,WCISG,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,4BAAIA,O,gBCaKC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASlB,UAAWC,IAAEkB,QAAtB,UACGF,GAAS,6BAAKA,IACdC,MCADnB,EAAS,CAAC,OAAQ,UAAW,OACpB,SAASqB,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAkBMC,EAAqB,WACzB,OAAOlB,EAAOC,EAAUC,GAM1B,OACE,sBAAKT,UAAU,YAAf,UACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBrB,QAASG,EAAQF,gBA1BhB,SAAAE,GACtB,OAAQA,GACN,IAAK,OACHuB,GAAQ,SAAAI,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHH,GAAW,SAAAI,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHH,GAAO,SAAAI,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAgBF,cAAC,EAAD,CAASX,MAAM,aAAf,SACGQ,IAAuB,EACtB,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,IACPd,gBAdRkB,KAAKC,MAAOvB,EAAOkB,IAAwB,OAiBrC,cAAC,EAAD,CAAcV,QAAQ,8BC7ChCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f10ece52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2leDU\",\"list\":\"Statistics_list__3Ciz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__FLMjI\"};","import s from './FeedbackOptions.module.scss';\r\nimport PropTypes from 'prop-types';\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          key={option}\r\n          value={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.scss';\r\nfunction Statistics({ good, neutral, bad, total, positivePercent }) {\r\n  return (\r\n    <ul className={s.item}>\r\n      <li className={s.list}>Good: {good}</li>\r\n      <li className={s.list}>Neutral: {neutral}</li>\r\n      <li className={s.list}>Bad: {bad}</li>\r\n      <li className={s.list}>Total: {total}</li>\r\n      <li className={s.list}>Positive feedback: {positivePercent}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nfunction Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\nimport './App.css';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\nimport Section from 'components/Section/Section';\n\nconst option = ['good', 'neutral', 'bad'];\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () =>\n    Math.floor((good / countTotalFeedback()) * 100);\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={option} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercent={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}